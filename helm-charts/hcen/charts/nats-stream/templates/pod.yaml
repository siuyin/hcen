# We do not need to use local persistent volumes here.
# Instead we could just schedule the pod to run
# directly on the node and use a hostPath volume.
#
# This local-volume is an example where a pod need
# not be manually bound to a node.

apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-nats-stream-pv
  labels:
    pvname: {{ .Release.Name }}-nats-stream-pv
    sys: {{ .Values.global.sysName }}
spec:
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: "/data/{{ .Release.Name }}/nats-stream"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - {{ .Values.global.statefulHostName }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-nats-stream-pvc
  labels:
    sys: {{ .Values.global.sysName }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  selector:
    matchLabels:
      pvname: {{ .Release.Name }}-nats-stream-pv
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "nats-stream.fullname" . }}
  labels:
    app: {{ include "nats-stream.name" . }}
    chart: {{ include "nats-stream.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    sys: {{ .Values.global.sysName }}
spec:
  containers:
  - name: nats-streaming
    image: {{ .Values.image }}
    args: ['-cid=test-cluster','--max_bytes=1GB','--store=FILE','--dir=/data','--file_sync=false']
    volumeMounts:
    - mountPath: /data
      name: data-volume
  volumes:
  - name: data-volume
    persistentVolumeClaim:
      claimName: {{ .Release.Name }}-nats-stream-pvc
